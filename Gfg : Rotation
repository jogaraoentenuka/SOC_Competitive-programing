class Solution{
public:	
	int findKRotation(int arr[], int n) {
	    // code here
	    int start = 0;
	    int end = n-1;
	    
	    while (start <= end) {
            int mid = start + (end - start) / 2;

            // Check if mid is the minimum element
            if (mid > 0 && arr[mid] < arr[mid - 1]) {
                return mid;
            }
            if (mid < n - 1 && arr[mid] > arr[mid + 1]) {
                return mid + 1;
            }

            // Determine which side to search
            if (arr[mid] >= arr[start]) {
                if (arr[start] <= arr[end]) {
                    // Already sorted part
                    return start;
                } else {
                    start = mid + 1;
                }
            } else {
                end = mid - 1;
            }
        }
	    return 0;
	}

};
