class Solution {
public:
    ListNode* getMid(ListNode* head){
        if(head == NULL || head->next == NULL){
            return head;
        }
        
        ListNode* slow = head;
        ListNode* fast = head;

        while(fast->next != NULL && fast->next->next != NULL){
            slow = slow->next;
            fast = fast->next->next;
        }
        return slow;
    }

    ListNode* reverseLL(ListNode* head){
        ListNode* curr = head;
        ListNode* prev = NULL;

        while(curr!= NULL){
            ListNode* next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }

    bool isPalindrome(ListNode* head) {
        if(head == NULL || head->next == NULL){
            return true;
        }
        
        ListNode* mid = getMid(head);
        ListNode* curr1 = head;
        ListNode* curr2 = mid->next;
        
        curr2 = reverseLL(curr2);

        while(curr2 != NULL){
            if(curr2->val != curr1->val){
                return false;
            }
            else{
                curr1 = curr1->next;
                curr2 = curr2->next;
            }
        }
        return true;
    }
};
