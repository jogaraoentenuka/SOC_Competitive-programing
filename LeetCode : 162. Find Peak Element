class Solution {
public:
    int binarySearch(vector<int>& nums, int start, int end, int n){
        if(start == end){
            return start;
        }

        int mid = start + (end-start)/2;

        if((mid == 0 || nums[mid] > nums[mid-1]) && (nums[mid] > nums[mid+1] || mid == n-1)){
            return mid;
        }

        else if(mid > 0 && nums[mid-1] > nums[mid]){
            return binarySearch(nums, start, mid-1, n);
        }
        else {
            return binarySearch(nums, mid+1, end, n);
        }

        return -1;
    }
    
    int findPeakElement(vector<int>& nums) {
        int n = nums.size();
        
        int start = 0;
        int end = n-1;

        return binarySearch(nums, start, end, n);
    }
};
